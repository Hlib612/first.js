// const myObject = {
//     name: "Hlib",
//     age: 15,
//     ocupation: "student",
//     city: "Kyiv",
// }

// 1. 
//  –û–≥–æ–ª–æ—Å–∏ –∑–º—ñ–Ω–Ω—É apartment —ñ –∑–∞–¥–∞–π —ñ–π –æ–±'—î–∫—Ç, 
// —è–∫–∏–π –æ–ø–∏—Å—É—î –∫–≤–∞—Ä—Ç–∏—Ä—É –∑ –Ω–∞—Å—Ç—É–ø–Ω–∏–º–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏:

// descr - —Ä—è–¥–æ–∫, —â–æ –º—ñ—Å—Ç–∏—Ç—å –æ–ø–∏—Å, 
// –∑–Ω–∞—á–µ–Ω–Ω—è "Spacious apartment in the city center";
// rating - —á–∏—Å–ª–æ, —â–æ –º—ñ—Å—Ç–∏—Ç—å —Ä–µ–π—Ç–∏–Ω–≥, –∑–Ω–∞—á–µ–Ω–Ω—è 4;
// price - —á–∏—Å–ª–æ, —â–æ –º—ñ—Å—Ç–∏—Ç—å —Ü—ñ–Ω—É, –∑–Ω–∞—á–µ–Ω–Ω—è 2153;
// tags - –º–∞—Å–∏–≤ —Ä—è–¥–∫—ñ–≤, —â–æ –º—ñ—Å—Ç–∏—Ç—å –º–µ—Ç–∞—ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é,
//  –∑–Ω–∞—á–µ–Ω–Ω—è ["premium", "promoted", "top"].

// 2. 
// –î–æ–ø–æ–≤–Ω–∏ –æ–±'—î–∫—Ç –∫–≤–∞—Ä—Ç–∏—Ä–∏ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—é owner, 
// –∑–Ω–∞—á–µ–Ω–Ω—è–º —è–∫–æ–≥–æ –±—É–¥–µ –æ–±'—î–∫—Ç –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ –≤–ª–∞—Å–Ω–∏–∫–∞.
// –î–æ–¥–∞–π –æ–±'—î–∫—Ç—É owner –Ω–∞—Å—Ç—É–ø–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ:

// name - —Ä—è–¥–æ–∫, —â–æ –º—ñ—Å—Ç–∏—Ç—å —ñ–º'—è –≤–ª–∞—Å–Ω–∏–∫–∞, –∑–Ω–∞—á–µ–Ω–Ω—è "Henry";
// phone - —Ä—è–¥–æ–∫, —â–æ –º—ñ—Å—Ç–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É, –∑–Ω–∞—á–µ–Ω–Ω—è "982-126-1588";
// email - —Ä—è–¥–æ–∫, —â–æ –º—ñ—Å—Ç–∏—Ç—å –ø–æ—à—Ç—É, –∑–Ω–∞—á–µ–Ω–Ω—è "henry.carter@aptmail.com"



// 3
// –î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥, –æ–Ω–æ–≤–∏–≤—à–∏ –∑–Ω–∞—á–µ–Ω–Ω—è –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π –æ–±'—î–∫—Ç–∞ apartment:

// —Ü—ñ–Ω—É —É –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ price –Ω–∞ 5000;
// —Ä–µ–π—Ç–∏–Ω–≥ –∫–≤–∞—Ä—Ç–∏—Ä–∏ —É –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ rating –Ω–∞ 4.7;
// —ñ–º'—è –≤–ª–∞—Å–Ω–∏–∫–∞ —É –≤–∫–ª–∞–¥–µ–Ω—ñ–π –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ name –Ω–∞ "Henry Sibola";
// –º–∞—Å–∏–≤ —Ç–µ–≥—ñ–≤ —É –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ tags, –¥–æ–¥–∞–≤—à–∏ –≤ –∫—ñ–Ω–µ—Ü—å —Ä—è–¥–æ–∫ "trusted".


// 4
// –î–æ–¥–∞–π –æ–±'—î–∫—Ç—É apartment –∫—ñ–ª—å–∫–∞ –Ω–æ–≤–∏—Ö –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π:

// area - –ø–ª–æ—â–∞ –≤ –∫–≤–∞–¥—Ä–∞—Ç–Ω–∏—Ö –º–µ—Ç—Ä–∞—Ö, —á–∏—Å–ª–æ 60;
// rooms - –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫—ñ–º–Ω–∞—Ç, —á–∏—Å–ª–æ 3;
// location - –º—ñ—Å—Ü–µ —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è –∫–≤–∞—Ä—Ç–∏—Ä–∏, –æ–±'—î–∫—Ç –∑ –Ω–∞—Å—Ç—É–ø–Ω–∏–º–∏ –≤–∫–ª–∞–¥–µ–Ω–∏–º–∏ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏;
// country - –∫—Ä–∞—ó–Ω–∞, —Ä—è–¥–æ–∫ "Jamaica";
// city - –º—ñ—Å—Ç–æ, —Ä—è–¥–æ–∫ "Kingston".

// –ó–≤–µ—Ä–Ω—ñ—Ç—å —É–≤–∞–≥—É: —è–∫—â–æ –≤–∏ —Å–ø—Ä–æ–±—É—î—Ç–µ –¥–æ–¥–∞—Ç–∏ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ country
//  —ñ city –¥–æ —â–µ –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–æ—ó –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ location,
//  –≤–∏ –æ—Ç—Ä–∏–º–∞—î—Ç–µ –ø–æ–º–∏–ª–∫—É. 
// –°–ø–æ—á–∞—Ç–∫—É —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–π—Ç–µ location —è–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π –æ–±'—î–∫—Ç, 
// –∞ –ø–æ—Ç—ñ–º –¥–æ–¥–∞–≤–∞–π—Ç–µ –¥–æ –Ω—å–æ–≥–æ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ.


const apartment = {
    descr: "Spacious apartment in the city center",
    rating: 4,
    price: 2153,
    tags: ["premium", "promoted", "top"],
    owner:{
        name: "Henry",
        phone: "982-126-1588",
        email: "henry.carter@aptmail.com",
    },
    changePrice(newPrise){
        this.price = newPrise;
        return `Prise changed to ${this.price}`;
    },
    isGood(){
        if(this.rating > 8){
            return true;
        } else {
            return false;
        }
    },
    addNewTag(newTag){
        this.tags.push(newTag);
    }
}
// console.log(apartment.rating);
// console.log(apartment?.owner?.email);
// console.log(apartment["tags"].length);
// console.log(apartment["tags"][0]);
// console.log(apartment["tags"][apartment["tags"].length - 1]);

// // 3
// apartment.price = 5000;
// apartment.rating = 4.7;
// apartment.owner.name = "Henry Sibola";
// apartment.tags.push("trusted");
// console.log(apartment);

// // 4
// apartment.area = 60;
// apartment.rooms = 3;
// apartment.location = {
//     ccountry: "Jamaica",
//     city: "Kingston",
// };
// console.log(apartment);



// // 5
// apartment.changePrice(7000)
// console.log(apartment);

// // 5
// console.log(apartment.changePrice(7000))
// // 6
// console.log(apartment.isGood())
// // 7
// apartment.addNewTag("best prise")
// console.log(apartment.tags);

// 8

// –ü—Ä–∞—Ü—é—î–º–æ –∑ –∫–æ–ª–µ–∫—Ü—ñ—î—é —Ç–æ–≤–∞—Ä—ñ–≤ –≤ –∫–æ—à–∏–∫—É:
// –ù–∞–ø–∏—Å–∞—Ç–∏ –º–µ—Ç–æ–¥–∏ –≤–∫–∞–∑–∞–Ω—ñ –Ω–∏–∂—á–µ –≤ –∫–æ–¥—ñ
// { name: 'üçé', price: 50 }
// { name: 'üçá', price: 70 }
// { name: 'üçã', price: 60 }
// { name: 'üçì', price: 110 }
const cart = {
  items: [],
  getItems() {
    return this.items;
  },
  add(product) {
    this.items.push(product);
    return `the product ${product.name} was added`
  },
  remove(productName) {
    for(let i = 0; i< this.items.length; i += 1){
        if(this.item[i].name === productName){
            console.log(`Found ${productName}`)
            this.item.splice(1, 1)
        }
    }
    return "This prodfdkfkmfk"
  },
  clear() {},
  countTotalPrice() {},
  increaseQuantity(productName) {},
  decreaseQuantity(productName) {},
};
// console.log(cart.getItems());
// console.table(cart.getItems());

// console.log(cart.add({ name: 'üçé', price: 50 }));
// console.log(cart.add({ name: 'üçá', price: 70 }));
// console.log(cart.add({ name: 'üçã', price: 60 }));
// console.log(cart.add({ name: 'üçì', price: 110 }));
// console.table(cart.getItems());

// console.log(cart.getItems());
// console.log(cart.add({ name: 'üçì', price: 110 }));
// console.table(cart.getItems());

// console.log(cart.remove('üçã'));
// console.table(cart.getItems());

// const {items} = cart;

// const valuess = [];

// const keys = Object.keys(apartment);
// console.log(keys);
// for (const key of keys){
//   valuess.push(apartment[key]);
// }
// console.log(valuess);

// const valuess = Object.values(apartment);
// console.log(valuess);

// const enteries = Object.enteries(apartment);
// console.log(enteries);


// 1
// –ú–∞—Å–∏–≤ colors –º—ñ—Å—Ç–∏—Ç—å –∫–æ–ª–µ–∫—Ü—ñ—é –∫–æ–ª—å–æ—Ä—ñ–≤.
// –ö–æ–∂–µ–Ω –∫–æ–ª—ñ—Ä –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π –æ–±'—î–∫—Ç–æ–º —ñ –º–∞—î –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ
// hex —ñ rgb –∑ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–º–∏ –¥–ª—è —Ü—å–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç—É —ñ –∫–æ–ª—å–æ—Ä—É –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏.

// –ü–µ—Ä–µ–±–µ—Ä–∏ –º–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤ colors, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ —Ü–∏–∫–ª for...of.
// –î–æ–¥–∞–π —É –º–∞—Å–∏–≤ hexColors –∑–Ω–∞—á–µ–Ω–Ω—è –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π hex,
// –∞ –≤ –º–∞—Å–∏–≤ rgbColors - –∑–Ω–∞—á–µ–Ω–Ω—è –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π rgb –∑ —É—Å—ñ—Ö –æ–±'—î–∫—Ç—ñ–≤ –º–∞—Å–∏–≤—É colors.
// const colors = [
//   { hex: "#f44336", rgb: "244,67,54" },
//   { hex: "#2196f3", rgb: "33,150,243" },
//   { hex: "#4caf50", rgb: "76,175,80" },
//   { hex: "#ffeb3b", rgb: "255,235,59" },
// ];

// const hexColors = [];
// const rgbColors = [];

// for(const color of colors){
//   rgbColors.push(color.rgb);
//   hexColors.push(color.hex);
// }
// console.log(hexColors);
// console.log(rgbColors);


// 2
// –î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ñ—É–Ω–∫—Ü—ñ—ó —Ç–∞–∫, —â–æ–± –≤–æ–Ω–∞ —à—É–∫–∞–ª–∞ –æ–±'—î–∫—Ç –ø—Ä–æ–¥—É–∫—Ç—É
// –∑ –ø–µ–≤–Ω–∏–º —ñ–º'—è–º (–≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å name) –≤ –º–∞—Å–∏–≤—ñ products —ñ
// –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ –π–æ–≥–æ —Ü—ñ–Ω—É (–≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å price).
// –Ø–∫—â–æ –ø—Ä–æ–¥—É–∫—Ç –∑ —Ç–∞–∫–æ—é –Ω–∞–∑–≤–æ—é –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ null.
// const products = [
//   { name: "Radar", price: 1300, quantity: 4 },
//   { name: "Scanner", price: 2700, quantity: 3 },
//   { name: "Droid", price: 400, quantity: 7 },
//   { name: "Grip", price: 1200, quantity: 9 },
// ];

// const productName = "Radar";

// const getProductPrice = (productName) => {
//   for(const product of products){
//     console.log(product.name)
//     if(product.name === productName){
//       return product.price;
//     }
//   }
//   return null;
// }
// // console.log(getProductPrice("Radar"));



// // 0
// // –°–∫–æ–ø—ñ—é–≤–∞—Ç–∏ –º–∞—Å–∏–≤ –≤–∏–∫–æ—Ä —Ä–æ–∑–ø–æ—Ä–æ—à–µ–Ω–Ω—è 
// const numberss = [1, 2, 3, 54, 12];
// // –°–∫–æ–ø—ñ—é–≤–∞—Ç–∏ –æ–±—î–∫—Ç –≤–∏–∫–æ—Ä —Ä–æ–∑–ø–æ—Ä–æ—à–µ–Ω–Ω—è 
// const apartment1 = {
//   descr: "Spacious apartment in the city center",
//   rating: 4,
//   price: 2153,
// };

// const apartment1Copy = {
//   ...apartment1
// }
// console.log(apartment1Copy)


// –§—É–Ω–∫—Ü—ñ—è getExtremeScores(scores) 
// –ø—Ä–∏–π–º–∞—î –º–∞—Å–∏–≤ –æ—Ü—ñ–Ω–æ–∫ (—á–∏—Å–µ–ª) —É –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ scores.
// –≤–æ–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ –æ–±'—î–∫—Ç —ñ–∑ –¥–≤–æ–º–∞ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏:
// –í–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å best –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ –Ω–∞–π–±—ñ–ª—å—à–µ —á–∏—Å–ª–æ –∑ –º–∞—Å–∏–≤—É scores
// –í–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å worst –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ –Ω–∞–π–º–µ–Ω—à–µ —á–∏—Å–ª–æ –∑ –º–∞—Å–∏–≤—É scores.
// –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –æ–ø–µ—Ä–∞—Ç–æ—Ä (...spread) —ñ –º–µ—Ç–æ–¥–∏ Math.max() —ñ Math.min().

// const getExtremeScores = (scores) =>{
//   const maxScore = Math.max(...scores);
//   const msnScore = Math.min(...scores);

//   const score = {
//     best: maxScore,
//     worst: msnScore,
//   }
//   return score
// }



// console.log(getExtremeScores([89, 64, 42, 17, 93, 51, 26])) //{ best: 93, worst: 17 }
// console.log(getExtremeScores([19, 7, 4, 17, 81, 24])) //{ best: 81, worst: 4 }


// –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∑–∞–ª–∏—à–∫–æ–≤–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤, 
// —Å—Ç–≤–æ—Ä–∏ —Ñ—É–Ω–∫—Ü—ñ—é add() —Ç–∞–∫, 
// —â–æ–± –≤–æ–Ω–∞ –ø—Ä–∏–π–º–∞–ª–∞ –±—É–¥—å-—è–∫—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ —É –ø–∞—Ä–∞–º–µ—Ç—Ä args
//  —ñ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ —ó—Ö–Ω—é —Å—É–º—É

// const add = (...args) =>{
//   let total = 0;
//   for(const num of args){
//      total += num;
//   }
//   return total;
// }


// console.log(add(12, 4, 11, 48)) // 75
// console.log(add(32, 6, 13, 19, 8)) // 78



// // –û–±‚Äô—î–∫—Ç user
// const user = {
//   name: 'John',
//   age: 30,
//   email: 'john@example.com'
// }

// const{name = "User", age = 31, email: userEmail = "none@gmail.com",} = user;
// console.log(name, age, userEmail)



// // –û–±‚Äô—î–∫—Ç movie
const movie = {
  title: 'The Shawshank Redemption',
  director: {
    name: 'Frank Darabont',
    nationality: 'American'
  },
  actors: ['Tim Robbins', 'Morgan Freeman'],
  release_year: 1994,
  ratings: {
    imdb: 9.3,
    rotten_tomatoes: 90
  }
}




// const {title, director: {name: directorName, nationality: directorNationality}, actors:[actorTim, actorMorgan], ratings: {imdb, rotten_tomatoes}} = movie;
// console.log(title, directorName, directorNationality, actorTim, actorMorgan , imdb, rotten_tomatoes)


// // –û–±‚Äô—î–∫—Ç books
const books = {
  count: 3,
  list: [
    {
      title: 'The Great Gatsby',
      author: 'F. Scott Fitzgerald',
      year: 1925
    },
    {
      title: 'To Kill a Mockingbird',
      author: 'Harper Lee',
      year: 1960
    },
    {
      title: '1984',
      author: 'George Orwell',
      year: 1949
    }
  ]
}


// const{count, list: [{title, author, year}, killBook, _1984]} = books;
// console.log(count, title, author, year, killBook, _1984);



// –î–∞–Ω–æ –º–∞—Å–∏–≤ –æ–±‚Äô—î–∫—Ç—ñ–≤
const friends = [
  { name: "Mango", online: false },
  { name: "Kiwi", online: true },
  { name: "Poly", online: false },
  { name: "Ajax", online: false },
];

// –ù–∞–ø–∏—Å–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—è —è–∫–∞ –±—É–¥–µ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –º–∞—Å–∏–≤
// —Ç–∞ —ñ–º‚Äô—è –¥—Ä—É–≥–∞ —è–∫–æ–≥–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–Ω–∞–π—Ç–∏

const findFriendByName =(arr, nameToFind) =>{
for( const {name} of friends){
  if(name === nameToFind){
    return "Found a friend"
  }
}
return "Doesnt find friend"
}

// console.log(findFriendByName(friends, 'Poly'));
// console.log(findFriendByName(friends, 'Chelsy'));

// –ù–∞–ø–∏—Å–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é —è–∫–∞ –±—É–¥–µ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ –º–∞—Å–∏–≤ –≤—Å—ñ—Ö —ñ–º–µ–Ω –¥—Ä—É–∑—ñ–≤
// console.log(getAllNames(friends));
// function getAllNames (friends) {
//     const names = [];
//     for (const friend of friends){
//         names.push(friend.name)
//     }
//     return names;
// }
// –ù–∞–ø–∏—Å–∞—Ç–∏ —Ñ—É–Ω–∫,—è–∫–∞ –±—É–¥
// –ù–∞–ø–∏—Å–∞—Ç–∏ —Ñ—É–Ω–∫,—è–∫–∞ –±—É–¥–µ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ –º–∞—Å–∏–≤ —ñ–º–µ–Ω –¥—Ä—É–∑—ñ–≤ —è–∫—ñ –æ–Ω–ª–∞–π–Ω
// console.log(getOnlineFriends(friends));

// –ù–∞–ø–∏—Å–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é —è–∫–∞ –±—É–¥–µ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ –º–∞—Å–∏–≤ —ñ–º–µ–Ω –¥—Ä—É–∑—ñ–≤ —è–∫—ñ –æ—Ñ–ª–∞–π–Ω
// console.log(getOfflineFriends(friends));

// function getOnlineFriends (friends) {
//     const onlineFriendsName = [];
//     for (const friend of friends) {
//         if (friend.online) {
//             onlineFriendsName.push(friend.name);
//         }
//     }
//     return onlineFriendsName
// }
// console.log(getOnlineFriends(friends));

// function getOfflineFriends (friends) {
//     const offlineFriendsName = [];
//     for (const {online, name} of friends) {
//         if (!online) {
//             offlineFriendsName.push (name);
//         }
//     }
//     return offlineFriendsName;
// }

// console.log(getOfflineFriends(friends));










const players = [
  { id: 'player-1', name: 'Mango', timePlayed: 310, points: 54, online: false },
  { id: 'player-2', name: 'Poly', timePlayed: 470, points: 92, online: true },
  { id: 'player-3', name: 'Kiwi', timePlayed: 230, points: 48, online: true },
  { id: 'player-4', name: 'Ajax', timePlayed: 150, points: 71, online: false },
  { id: 'player-5', name: 'Chelsy', timePlayed: 80, points: 48, online: true },
];

// –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ üëÜ –º–∞—Å–∏–≤ –æ–±‚Äô—î–∫—Ç—ñ–≤ –≤–∏–∫–æ–Ω–∞–π –Ω–∞—Å—Ç—É–ø–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è:
//map()
// –û—Ç—Ä–∏–º–∞—Ç–∏ –º–∞—Å–∏–≤ —ñ–º–µ–Ω –≤—Å—ñ—Ö –≥—Ä–∞–≤—Ü—ñ–≤

const playerName = players.map(({name}) => name);
// console.log(playerName)
// –ó–±—ñ–ª—å—à–∏—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—ñ–Ω—Ç—ñ–≤ –∫–æ–∂–Ω–æ–≥–æ –≥—Ä–∞–≤—Ü—è –Ω–∞ 10% (—Ä–æ–∑–ø–æ—Ä–æ—à—É—î–º–æ —Å—Ç–∞—Ä–∏–π –æ–±'—î–∫—Ç)



//* –ó–±—ñ–ª—å—à–∏—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—ñ–Ω—Ç—ñ–≤ –∫–æ–∂–Ω–æ–≥–æ –≥—Ä–∞–≤—Ü—è –Ω–∞ 10% (—Ä–æ–∑–ø–æ—Ä–æ—à—É—î–º–æ —Å—Ç–∞—Ä–∏–π –æ–±'—î–∫—Ç)

const playerPoints = players.map((player) => {
  return { ...player, points: player.points * 1.1 };
});
// console.log(playerPoints);

const playerPoint = players.map(({points}) => points + points/10);
// console.log(playerPoint)


// –ó–±—ñ–ª—å—à–∏—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≥–æ–¥–∏–Ω –≥—Ä–∞–≤—Ü—è –ø–æ id. –ü–µ—Ä–µ–ø–∏—Å–∞—Ç–∏ –Ω–∞ —Ç–µ—Ä–Ω–∞—Ä–Ω–∏–∫

const ubdatedPlayerHours = players.map((player) => {
  if(player.id === 'player-2'){
    // player.timePlayed = player.timePlayed + 100;
    return {...player, timePlayed: player.timePlayed + 100,};
  }
  return player;
})
// console.log(ubdatedPlayerHours);
// console.log(players);

//filter()
// –û—Ç—Ä–∏–º–∞—Ç–∏ –º–∞—Å–∏–≤ –≤—Å—ñ—Ö –≥—Ä–∞–≤—Ü—ñ–≤ –æ–Ω–ª–∞–π–Ω

const playersOnline = players.filter((player) => player.online);
// console.log(playersOnline)
// –û—Ç—Ä–∏–º–∞—Ç–∏ –º–∞—Å–∏–≤ –≤—Å—ñ—Ö –≥—Ä–∞–≤—Ü—ñ–≤ –æ—Ñ–ª–∞–π–Ω

const playersOfline = players.filter((player) => !player.online);
// console.log(playersOfline)
// –û—Ç—Ä–∏–º–∞—Ç–∏ –º–∞—Å–∏–≤ –≤—Å—ñ—Ö —Ö–∞—Ä–¥–∫–æ—Ä–Ω–∏—Ö –≥—Ä–∞–≤—Ü—ñ–≤ –∑ —á–∞—Å–æ–º –±—ñ–ª—å—à–µ 250
//Find()
const bestPlayers = players.filter((player) => player.timePlayed > 250);
// console.log(bestPlayers)
// –ó–Ω–∞–π—Ç–∏ –≥—Ä–∞–≤—Ü—è –ø–æ id


const playerById = players.find((player) => (player.id === "player-2"));
// console.log(playerById);
// –ó–Ω–∞–π—Ç–∏ –≥—Ä–∞–≤—Ü—è –ø–æ —ñ–º–µ–Ω—ñ
const playerByName = players.find((player) => (player.name === 'Kiwi'));
// console.log(playerByName);
//every()
// –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —á–∏ –≤—Å—ñ –≥—Ä–∞–≤—Ü—ñ –º–∞—é—Ç—å —á–∞—Å –±—ñ–ª—å—à–µ 200
const everyTime = players.every((player) => (player.timePlayed >= 200));
// console.log(everyTime);
// –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —á–∏ –≤—Å—ñ –≥—Ä–∞–≤—Ü—ñ –æ–Ω–ª–∞–π–Ω
const playersAreActive = players.every((player) => (player.online === true));
// console.log(playersAreActive);



const scores = [61, 19, 74, 35, 92, 56];
const ascendingScores = scores.sort((a, b) => a - b);
// console.log(ascendingScores);
const scores1 = [61, 19, 74, 35, 92, 56];
const descendingScores = scores1.sort((a, b) => b - a);
// console.log(descendingScores);


const students1 = ["Jacob", "Artemis", "Solomon", "Adrian", "Kai", "Ganymede"];

const inAlphabetOrder = students1.sort((a, b) => a.localeCompare(b));
// console.log(inAlphabetOrder); 

const inReversedOrder = students1.sort((a, b) => b.localeCompare(a));
// console.log(inReversedOrder);


const totalTimePlayed = players.reduce((acc, player) => (player.timePlayed + acc), 0);
console.log(totalTimePlayed)

const sortedPlayers = players.sort((previousPlayer, nextPlayer) => previousPlayer.points - nextPlayer.points)
console.log(sortedPlayers)